
package ir.parsianinsurance.he.interfaces.webservice.client.sanam;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BitartsWebService", targetNamespace = "http://implementation.service.parsian.bitarts.com/", wsdlLocation = "http://172.16.0.168/services/BitartsWebService?wsdl")
public class BitartsWebService_Service
    extends Service
{

    private final static URL BITARTSWEBSERVICE_WSDL_LOCATION;
    private final static WebServiceException BITARTSWEBSERVICE_EXCEPTION;
    private final static QName BITARTSWEBSERVICE_QNAME = new QName("http://implementation.service.parsian.bitarts.com/", "BitartsWebService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://172.16.0.168/services/BitartsWebService?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BITARTSWEBSERVICE_WSDL_LOCATION = url;
        BITARTSWEBSERVICE_EXCEPTION = e;
    }

    public BitartsWebService_Service() {
        super(__getWsdlLocation(), BITARTSWEBSERVICE_QNAME);
    }

    public BitartsWebService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), BITARTSWEBSERVICE_QNAME, features);
    }

    public BitartsWebService_Service(URL wsdlLocation) {
        super(wsdlLocation, BITARTSWEBSERVICE_QNAME);
    }

    public BitartsWebService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BITARTSWEBSERVICE_QNAME, features);
    }

    public BitartsWebService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BitartsWebService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BitartsWebService
     */
    @WebEndpoint(name = "BitartsWebServicePort")
    public BitartsWebService getBitartsWebServicePort() {
        return super.getPort(new QName("http://implementation.service.parsian.bitarts.com/", "BitartsWebServicePort"), BitartsWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BitartsWebService
     */
    @WebEndpoint(name = "BitartsWebServicePort")
    public BitartsWebService getBitartsWebServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://implementation.service.parsian.bitarts.com/", "BitartsWebServicePort"), BitartsWebService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BITARTSWEBSERVICE_EXCEPTION!= null) {
            throw BITARTSWEBSERVICE_EXCEPTION;
        }
        return BITARTSWEBSERVICE_WSDL_LOCATION;
    }

}
